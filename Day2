1. Final Value of Variable After Performing Operations
   There is a programming language with only four operations and one variable X:

  ++X and X++ increments the value of the variable X by 1.
  --X and X-- decrements the value of the variable X by 1.
  Initially, the value of X is 0.

  Given an array of strings operations containing a list of operations, return the final value of X after performing all the operations.

Solution- 
    class Solution {
        public int finalValueAfterOperations(String[] operations) {
            int X = 0;

            for(int i = 0; i < operations.length; ++i){

                if(operations[i].equals("++X") || operations[i].equals("X++")){
                    X += 1;
                }

                if(operations[i].equals("--X") || operations[i].equals("X--")){
                    X -= 1;
                }
            }

            return X;
        }
    }
    
2. A sentence is a list of words that are separated by a single space with no leading or trailing spaces.

   You are given an array of strings sentences, where each sentences[i] represents a single sentence.

   Return the maximum number of words that appear in a single sentence.
   
   Input: sentences = ["alice and bob love leetcode", "i think so too", "this is great thanks very much"]
   Output: 6
   Explanation: 
   - The first sentence, "alice and bob love leetcode", has 5 words in total.
   - The second sentence, "i think so too", has 4 words in total.
   - The third sentence, "this is great thanks very much", has 6 words in total.
   Thus, the maximum number of words in a single sentence comes from the third sentence, which has 6 words.

Solution- class Solution {
              public int mostWordsFound(String[] sentences) {
                  int max = 0;

                  for(int i = 0; i < sentences.length; ++i){
                      if(sentences[i].split(" ").length > max){
                          max = sentences[i].split(" ").length;
                      }
                  }

                  return max;
              }  
          }
